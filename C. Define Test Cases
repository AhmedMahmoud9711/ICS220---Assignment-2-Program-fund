# Define the test cases based on Part C instructions using the classes already discussed.
# Each feature will have at least two examples and basic exception handling.

class TestSuite:

    def test_guest_account_creation(self):
        print("Testing Guest Account Creation:")
        try:
            guest1 = Guest(1, "Ali", "ali@example.com", "0501234567", "Gold")
            print(guest1)
        except Exception as e:
            print("Failed to create guest1:", e)

        try:
            guest2 = Guest(2, "", "missingname@example.com", "0500000000", "Silver")  # name is missing
            print(guest2)
        except Exception as e:
            print("Failed to create guest2:", e)
        print()

    def test_search_available_rooms(self):
        print("Testing Searching for Available Rooms:")
        room1 = Room(101, "Double", 300.0, "WiFi, TV", True)
        room2 = Room(102, "Single", 200.0, "WiFi", False)

        rooms = [room1, room2]
        available_rooms = [room for room in rooms if room.is_available()]
        print("Available Rooms:")
        for room in available_rooms:
            print(room)
        print()

    def test_making_room_reservation(self):
        print("Testing Making a Room Reservation:")
        booking1 = Booking(501, "2025-04-01", "2025-04-05", "Confirmed")
        print(booking1)

        booking2 = Booking(502, "2025-04-10", "2025-04-08", "Pending")  # Invalid date logic, but no check coded
        print(booking2)
        print()

    def test_booking_confirmation_notification(self):
        print("Testing Booking Confirmation Notification:")
        try:
            booking = Booking(601, "2025-05-01", "2025-05-03", "Confirmed")
            print("Notification: Booking confirmed for", booking)
        except Exception as e:
            print("Notification failed:", e)
        print()

    def test_invoice_generation(self):
        print("Testing Invoice Generation for a Booking:")
        try:
            invoice = Invoice(701, 501, 1200.0, "Credit Card", 100.0)
            print(invoice)
        except Exception as e:
            print("Failed to generate invoice:", e)
        print()

    def test_payment_processing(self):
        print("Testing Processing Different Payment Methods:")
        try:
            invoice1 = Invoice(801, 502, 1000.0, "Debit Card", 0.0)
            invoice2 = Invoice(802, 503, 900.0, "Mobile Wallet", 50.0)
            print(invoice1)
            print(invoice2)
        except Exception as e:
            print("Payment processing failed:", e)
        print()

    def test_reservation_history(self):
        print("Testing Displaying Reservation History:")
        guest_bookings = [
            Booking(901, "2025-06-01", "2025-06-05", "Completed"),
            Booking(902, "2025-07-01", "2025-07-04", "Cancelled"),
        ]
        for booking in guest_bookings:
            print(booking)
        print()

    def test_cancellation_of_reservation(self):
        print("Testing Cancellation of a Reservation:")
        booking = Booking(1001, "2025-08-01", "2025-08-03", "Confirmed")
        print("Before cancellation:", booking)
        # Simulate cancellation
        booking._Booking__status = "Cancelled"  # Accessing private attribute directly for simulation
        print("After cancellation:", booking)
        print()


# Create an instance of the test suite and run all test cases
test_suite = TestSuite()
test_suite.test_guest_account_creation()
test_suite.test_search_available_rooms()
test_suite.test_making_room_reservation()
test_suite.test_booking_confirmation_notification()
test_suite.test_invoice_generation()
test_suite.test_payment_processing()
test_suite.test_reservation_history()
test_suite.test_cancellation_of_reservation()
